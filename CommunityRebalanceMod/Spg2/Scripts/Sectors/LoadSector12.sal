/* START anomaly randomization */

int A = 1 ;
int B = 4 ;
int C = 1 ;

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_0 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_1 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_2 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_3 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_4 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_5 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_6 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_7 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_8 SetEnabledEx 1 ;
endif

math C = Rnd A B ;
if C == 1
	anomaly GetByKeyName ANO_12_9 SetEnabledEx 1 ;
endif

/* END anomaly randomization */

/* START derelict randomization */

A = 1 ;
B = 3 ;
C = 1 ;

math C = Rnd A B ;
if C == 1
	derelict GetByKeyName DER_12_0 SetEnabled 1 ;
endif

math C = Rnd A B ;
if C == 1
	derelict GetByKeyName DER_12_1 SetEnabled 1 ;
endif

math C = Rnd A B ;
if C == 1
	derelict GetByKeyName DER_12_2 SetEnabled 1 ;
endif

math C = Rnd A B ;
if C == 1
	derelict GetByKeyName DER_12_3 SetEnabled 1 ;
endif

math C = Rnd A B ;
if C == 1
	derelict GetByKeyName DER_12_4 SetEnabled 1 ;
endif

math C = Rnd A B ;
if C == 1
	derelict GetByKeyName DER_12_5 SetEnabled 1 ;
endif

/* END derelict randomization */

/* ------------- ------------- */

/* temporary conditions for Genos1_SQ available */

/*
int questCond1 = 0 ;
int questCond2 = 0 ;
sidequest GetById 7 GetSolve questCond1 ;
sidequest GetById 8 GetAcquire questCond2 ;
if questCond1 == 0 && questCond2 == 0
	sidequest GetById 7 SetAvailable 1 ;
endif
*/

End
